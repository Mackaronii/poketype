{"version":3,"sources":["components/Splash.jsx","components/SectionHeader.jsx","components/Prompt.jsx","components/PromptLeaderboard.jsx","components/PromptTypingSection.jsx","App.js","index.js"],"names":["Splash","props","Container","style","textAlign","Image","src","fluid","display","maxWidth","margin","marginTop","marginBottom","to","Button","variant","SectionHeader","state","wpm","acc","newProps","this","setState","Component","Prompt","promptWords","curWordIndex","correctIndices","wrongIndices","map","word","i","key","fontSize","color","includes","PromptLeaderboard","leaderboard","entry","Date","promptId","Table","striped","bordered","hover","toLocaleString","PromptTypingSection","generateNewPrompt","newPromptIndex","Math","floor","random","prompts","length","prompt","newPrompt","hasStarted","split","isInputDisabled","isLeaderboardVisible","curWord","retryPrompt","changeHandler","e","startTime","now","console","log","curInput","target","value","isSpaceKeyPressed","curInputNoSpace","substr","compareWord","backgroundColor","isLastWord","inputWord","push","promptCompleted","endTime","durationSec","round","numCorrect","numTotal","parseFloat","toFixed","submitPromptLeaderboardEntry","then","getPromptLeaderboardById","prompt_leaderboard","input","category","getAllPrompts","getPromptsByCategory","fetch","method","res","json","err","error","username","date","headers","Connection","body","JSON","stringify","borderRadius","padding","Form","onSubmit","preventDefault","Control","type","onChange","disabled","onClick","marginLeft","Main","paddingTop","paddingBottom","fontFamily","App","path","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e8d7c3f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Splash(props) {\r\n  return (\r\n    <Container style={{ textAlign: \"center\" }}>\r\n      <Image\r\n        src=\"https://lh3.googleusercontent.com/proxy/OqsgBGbg5AG5GbQFaTQhlj-TTkIE7GQQueQJwKYMnhkxhRWenViFiWpD7NRiUWS3ZYszms7MhLo1H1DaCMSUhigEmAzL8y9w1w\"\r\n        fluid\r\n        style={{\r\n          display: \"block\",\r\n          maxWidth: \"400px\",\r\n          margin: \"auto\",\r\n          marginTop: \"50px\",\r\n          marginBottom: \"50px\"\r\n        }}\r\n      />\r\n      <h1>Welcome to Pok&#xe9;Type!</h1>\r\n      <p>\r\n        Challenge other trainers across the globe to be the best typist there\r\n        ever was.\r\n      </p>\r\n      <Link to=\"/facts\">\r\n        <Button variant=\"outline-primary\" style={{ marginTop: \"50px\" }}>\r\n          Get Started!\r\n        </Button>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Splash;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SectionHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      wpm: \"XX\",\r\n      acc: \"XX\"\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ wpm: newProps.wpm, acc: newProps.acc });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          WPM: {this.state.wpm} | ACC: {this.state.acc}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Prompt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      promptWords: props.promptWords,\r\n      curWordIndex: props.curWordIndex,\r\n      correctIndices: props.correctIndices,\r\n      wrongIndices: props.wrongIndices\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      promptWords: newProps.promptWords,\r\n      curWordIndex: newProps.curWordIndex,\r\n      correctIndices: newProps.correctIndices,\r\n      wrongIndices: newProps.wrongIndices\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"30px\", textAlign: \"left\" }}>\r\n        {this.state.promptWords.map((word, i) => (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              display: \"inline\",\r\n              fontSize: \"18px\",\r\n              color:\r\n                i === this.state.curWordIndex\r\n                  ? \"#D06AFF\"\r\n                  : this.state.correctIndices.includes(i)\r\n                  ? \"#69B23F\"\r\n                  : this.state.wrongIndices.includes(i)\r\n                  ? \"#D60000\"\r\n                  : \"#000\"\r\n            }}\r\n          >\r\n            {word + \" \"}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prompt;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction PromptLeaderboard(props) {\r\n  const leaderboard = props.leaderboard;\r\n\r\n  // Convert returned date strings into Date objects\r\n  leaderboard.map(entry => {\r\n    entry[\"date\"] = new Date(entry[\"date\"]);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <p>Leaderboard (Prompt ID: {props.promptId})</p>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>WPM</th>\r\n            <th>ACC (%)</th>\r\n            <th>Attempted On</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((entry, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{entry[\"username\"]}</td>\r\n              <td>{entry[\"wpm\"]}</td>\r\n              <td>{entry[\"acc\"]}</td>\r\n              <td>{entry[\"date\"].toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptLeaderboard;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport Prompt from \"./Prompt\";\r\nimport PromptLeaderboard from \"./PromptLeaderboard\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass PromptTypingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: props.category,\r\n      hasStarted: false,\r\n      prompts: [],\r\n      prompt: {},\r\n      promptWords: [],\r\n      curWordIndex: 0,\r\n      curWord: \"\",\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false,\r\n      isLeaderboardVisible: false\r\n    };\r\n  }\r\n\r\n  // Get prompts and then generate a new prompt\r\n  componentDidMount() {\r\n    if (this.state.category === \"\") {\r\n      this.getAllPrompts().then(prompts =>\r\n        this.setState({ prompts: prompts }, () => this.generateNewPrompt())\r\n      );\r\n    } else {\r\n      this.getPromptsByCategory().then(prompts =>\r\n        this.setState({ prompts: prompts }, () => this.generateNewPrompt())\r\n      );\r\n    }\r\n  }\r\n\r\n  // Get all prompts\r\n  getAllPrompts() {\r\n    const promise = fetch(\"https://poketype-api.herokuapp.com/v1/prompts\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  getPromptsByCategory() {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompts?category=${this.state.category}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Submit entry to the leaderboard of the given prompt\r\n  submitPromptLeaderboardEntry(promptId, username, wpm, acc, date) {\r\n    const entry = {\r\n      username: username,\r\n      wpm: wpm,\r\n      acc: acc,\r\n      date: date\r\n    };\r\n\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards/${promptId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Connection: \"keep-alive\"\r\n        },\r\n        body: JSON.stringify(entry)\r\n      }\r\n    ).then(res => console.log(res));\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Get prompt leaderboard by ID\r\n  getPromptLeaderboardById(promptId) {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards?promptId=${promptId}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        const leaderboard = json[\"prompt_leaderboard\"];\r\n        console.log(leaderboard);\r\n        return leaderboard;\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  generateNewPrompt = () => {\r\n    // Generate a new prompt (cannot be the same as current prompt)\r\n    let newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    while (\r\n      this.state.prompt[\"_id\"] === this.state.prompts[newPromptIndex][\"_id\"]\r\n    ) {\r\n      newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    }\r\n    const newPrompt = this.state.prompts[newPromptIndex];\r\n\r\n    // Set state for new prompt and enable input\r\n    this.setState(\r\n      {\r\n        hasStarted: false,\r\n        prompt: newPrompt,\r\n        promptWords: newPrompt[\"prompt\"].split(\" \"),\r\n        curWordIndex: 0,\r\n        wrongIndices: [],\r\n        correctIndices: [],\r\n        wpm: \"XX\",\r\n        acc: \"XX\",\r\n        isInputDisabled: false,\r\n        isLeaderboardVisible: false\r\n      },\r\n      () => {\r\n        this.setState({ curWord: this.state.promptWords[0] });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Reset the typing form for the same prompt\r\n  retryPrompt = () => {\r\n    this.setState({\r\n      hasStarted: false,\r\n      curWord: this.state.promptWords[0],\r\n      curWordIndex: 0,\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false\r\n    });\r\n  };\r\n\r\n  changeHandler = e => {\r\n    // Set start time on first key press\r\n    if (!this.state.hasStarted) {\r\n      const startTime = Date.now();\r\n      this.setState({ hasStarted: true, startTime: startTime });\r\n      console.log(`Timer started: ${startTime}`);\r\n    }\r\n\r\n    const curInput = e.target.value;\r\n\r\n    if (this.isSpaceKeyPressed(curInput)) {\r\n      // [space] key pressed\r\n      const curInputNoSpace = curInput.substr(0, curInput.length - 1);\r\n      this.compareWord(curInputNoSpace);\r\n      e.target.value = \"\"; // Clear input control\r\n      e.target.style.backgroundColor = \"#FFF\";\r\n    } else if (this.isLastWord(curInput)) {\r\n      // Automatically push word without needing a [Space] press if last word\r\n      this.compareWord(curInput);\r\n      e.target.value = \"\"; // Clear input control\r\n    } else {\r\n      // Highlight the input field if the user's input is incorrect\r\n      if (curInput !== this.state.curWord.substr(0, curInput.length)) {\r\n        e.target.style.backgroundColor = \"#EE7878\";\r\n      } else {\r\n        e.target.style.backgroundColor = \"#FFF\";\r\n      }\r\n    }\r\n  };\r\n\r\n  compareWord = inputWord => {\r\n    // Check if input matches current word\r\n    if (this.state.curWord === inputWord) {\r\n      this.state.correctIndices.push(this.state.curWordIndex);\r\n    } else {\r\n      this.state.wrongIndices.push(this.state.curWordIndex);\r\n    }\r\n\r\n    // Get next word if prompt is incomplete\r\n    this.setState({ curWordIndex: this.state.curWordIndex + 1 }, () => {\r\n      if (this.state.curWordIndex < this.state.promptWords.length) {\r\n        this.setState({\r\n          curWord: this.state.promptWords[this.state.curWordIndex]\r\n        });\r\n      } else {\r\n        this.promptCompleted();\r\n      }\r\n    });\r\n  };\r\n\r\n  promptCompleted = () => {\r\n    // Get duration\r\n    const endTime = Date.now();\r\n    console.log(`Timer ended: ${endTime}`);\r\n    const durationMs = endTime - this.state.startTime;\r\n    const durationSec = durationMs / 1000;\r\n\r\n    // Get WPM (only counts correct words)\r\n    const wpm = Math.round(\r\n      (this.state.correctIndices.length / durationSec) * 60\r\n    );\r\n\r\n    // Get accuracy\r\n    const numCorrect = this.state.correctIndices.length;\r\n    const numTotal = this.state.promptWords.length;\r\n    const acc = parseFloat(((numCorrect / numTotal) * 100).toFixed(2));\r\n\r\n    this.setState({ isInputDisabled: true, wpm: wpm, acc: acc }, () => {\r\n      // First, post prompt leaderboard entry\r\n      this.submitPromptLeaderboardEntry(\r\n        this.state.prompt[\"_id\"],\r\n        \"test_user\",\r\n        wpm,\r\n        acc,\r\n        new Date()\r\n      )\r\n        // Then get the prompt leaderboard for the current prompt\r\n        .then(() => this.getPromptLeaderboardById(this.state.prompt[\"_id\"]))\r\n        // Finally, show the leaderboard\r\n        .then(prompt_leaderboard =>\r\n          this.setState({\r\n            prompt_leaderboard: prompt_leaderboard,\r\n            isLeaderboardVisible: true\r\n          })\r\n        );\r\n    });\r\n  };\r\n\r\n  // Returns true if the last character of input is a [space]\r\n  isSpaceKeyPressed = input => {\r\n    return input.substr(input.length - 1) === \" \";\r\n  };\r\n\r\n  // Returns true if the input matches the current word and\r\n  // the current word is the last word of the prompt\r\n  isLastWord = word => {\r\n    return (\r\n      this.state.curWordIndex === this.state.promptWords.length - 1 &&\r\n      word === this.state.curWord\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SectionHeader wpm={this.state.wpm} acc={this.state.acc} />\r\n        <Container\r\n          style={{\r\n            backgroundColor: \"#ECECEC\",\r\n            borderRadius: \"10px\",\r\n            padding: \"30px\",\r\n            marginBottom: \"30px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <Prompt\r\n            promptWords={this.state.promptWords}\r\n            curWordIndex={this.state.curWordIndex}\r\n            correctIndices={this.state.correctIndices}\r\n            wrongIndices={this.state.wrongIndices}\r\n          />\r\n          <Form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Form.Control\r\n              type=\"text\"\r\n              onChange={this.changeHandler}\r\n              disabled={this.state.isInputDisabled}\r\n            />\r\n          </Form>\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <Button variant=\"primary\" onClick={this.generateNewPrompt}>\r\n              Give me another Pok&#xe9;Fact!\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-dark\"\r\n              onClick={this.retryPrompt}\r\n              style={{ marginLeft: \"20px\" }}\r\n            >\r\n              Retry\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n        {this.state.isLeaderboardVisible ? (\r\n          <PromptLeaderboard\r\n            promptId={this.state.prompt[\"_id\"]}\r\n            leaderboard={this.state.prompt_leaderboard}\r\n          />\r\n        ) : (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Complete the Pok&#xe9;Fact above to view its leaderboards!\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromptTypingSection;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Splash from \"./components/Splash\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PromptTypingSection from \"./components/PromptTypingSection\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/facts\">\r\n              <Main category=\"fact\" />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Splash />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        paddingTop: \"30px\",\r\n        paddingBottom: \"30px\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"Verdana\"\r\n      }}\r\n    >\r\n      <h4 style={{ marginBottom: \"50px\" }}>Pok&#xe9;Type</h4>\r\n      <PromptTypingSection category={props.category} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}