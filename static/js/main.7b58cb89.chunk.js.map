{"version":3,"sources":["components/SignUpModal.jsx","components/Home.jsx","components/LogIn.jsx","components/CategoryItem.jsx","components/Categories.jsx","components/SectionHeader.jsx","components/Prompt.jsx","components/PromptLeaderboard.jsx","components/Loading.jsx","components/PromptTypingSection.jsx","App.js","index.js"],"names":["Link","require","SignUpModal","props","state","show","formUsername","formPassword","formConfirmPassword","isUsernameTaken","isValid","isSubmitEnabled","isSubmitLoading","isSignedUp","handleClose","handleExited","bind","handleChange","handleSubmit","validateForm","newProps","this","setState","e","target","id","value","fetch","method","then","res","json","err","console","error","length","Object","keys","every","key","preventDefault","createUser","isSuccess","username","password","user","headers","body","JSON","stringify","status","Modal","centered","onHide","onExited","Header","closeButton","Title","Body","to","Button","variant","Form","noValidate","onSubmit","Group","controlId","Label","Control","required","type","autoComplete","onChange","isInvalid","Feedback","block","disabled","style","borderRadius","Spinner","as","animation","size","role","aria-hidden","marginRight","display","Footer","onClick","Component","Home","showSignUp","handleShow","Container","height","Row","verticalAlign","textAlign","Image","fluid","src","process","maxWidth","margin","marginBottom","marginTop","LogIn","isLoggedIn","showError","logIn","result","success","credentials","padding","color","CategoryItem","Card","bg","text","title","Text","description","Categories","categories","dest","map","category","i","textDecoration","SectionHeader","wpm","acc","Prompt","promptWords","curWordIndex","correctIndices","wrongIndices","word","fontSize","includes","PromptLeaderboard","leaderboard","entry","Date","sort","a","b","reverse","promptId","Table","striped","bordered","hover","toLocaleString","Loading","PromptTypingSection","generateNewPrompt","newPromptIndex","Math","floor","random","prompts","prompt","newPrompt","hasStarted","split","isInputDisabled","isLeaderboardVisible","curWord","retryPrompt","changeHandler","startTime","now","log","curInput","isSpaceKeyPressed","curInputNoSpace","substr","compareWord","backgroundColor","isLastWord","inputWord","push","promptCompleted","endTime","durationSec","round","numCorrect","numTotal","parseFloat","toFixed","submitPromptLeaderboardEntry","getPromptLeaderboardById","prompt_leaderboard","input","hasLoaded","getAllPrompts","getPromptsByCategory","date","Connection","Main","paddingTop","paddingBottom","fontFamily","App","basename","exact","path","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b58cb89.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nconst Link = require(\"react-router-dom\").Link;\r\n\r\nclass SignUpModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: props.show,\r\n      formUsername: \"\",\r\n      formPassword: \"\",\r\n      formConfirmPassword: \"\",\r\n      isUsernameTaken: false,\r\n      isValid: {\r\n        formUsername: false,\r\n        formPassword: false,\r\n        formConfirmPassword: false\r\n      },\r\n      isSubmitEnabled: false,\r\n      isSubmitLoading: false,\r\n      isSignedUp: false\r\n    };\r\n\r\n    this.handleClose = props.handleClose;\r\n    this.handleExited = this.handleExited.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ show: newProps.show });\r\n  }\r\n\r\n  handleChange(e) {\r\n    // Update field states and then validate form\r\n    this.setState({ [e.target.id]: e.target.value }, () => this.validateForm());\r\n  }\r\n\r\n  validateForm() {\r\n    // Check if username is already taken\r\n    fetch(\r\n      `https://poketype-api.herokuapp.com/v1/users?username=${this.state.formUsername}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        this.setState({ isUsernameTaken: json !== null }, () => {\r\n          // Next, determine which fields are valid\r\n          this.setState(\r\n            {\r\n              isValid: {\r\n                formUsername:\r\n                  !this.state.isUsernameTaken &&\r\n                  this.state.formUsername.length > 0,\r\n                formPassword: this.state.formPassword.length >= 6,\r\n                formConfirmPassword:\r\n                  this.state.formConfirmPassword.length >= 6 &&\r\n                  this.state.formPassword === this.state.formConfirmPassword\r\n              }\r\n            },\r\n            () =>\r\n              // Then enable the submit button is all fields are valid\r\n              this.setState({\r\n                isSubmitEnabled: Object.keys(this.state.isValid).every(\r\n                  key => this.state.isValid[key]\r\n                )\r\n                  ? true\r\n                  : false\r\n              })\r\n          );\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { formUsername, formPassword } = this.state;\r\n\r\n    this.setState({ isSubmitLoading: true }, () => {\r\n      // Try to create new user\r\n      this.createUser(formUsername, formPassword).then(isSuccess => {\r\n        if (isSuccess) {\r\n          // Successfully created user, show log in button\r\n          this.setState({ isSignedUp: true, isSubmitLoading: false });\r\n        } else {\r\n          // Failed to create user, show error\r\n          this.setState({ isSubmitLoading: false });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Clean up state for when modal is re-opened\r\n  handleExited() {\r\n    this.setState({\r\n      isSubmitEnabled: false,\r\n      isSubmitLoading: false,\r\n      formUsername: \"\",\r\n      formPassword: \"\",\r\n      formConfirmPassword: \"\",\r\n      isUsernameTaken: false,\r\n      isValid: {\r\n        formUsername: false,\r\n        formPassword: false,\r\n        formConfirmPassword: false\r\n      }\r\n    });\r\n  }\r\n\r\n  // Create a new user. Return true if successful and false otherwise.\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    const promise = fetch(`https://poketype-api.herokuapp.com/v1/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    }).then(\r\n      res => {\r\n        if (res.status === 201) {\r\n          // User successfully created\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      err => console.error(err)\r\n    );\r\n\r\n    return promise;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        centered\r\n        show={this.state.show}\r\n        onHide={this.handleClose}\r\n        onExited={this.handleExited}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Your Account</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {this.state.isSignedUp ? (\r\n            <div>\r\n              <p>Your account has been created!</p>\r\n              <Link to=\"/login\">\r\n                <Button variant=\"primary\">Log In</Button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <Form noValidate onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"formUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  onChange={this.handleChange}\r\n                  isValid={this.state.isValid.formUsername}\r\n                  isInvalid={this.state.isUsernameTaken}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Username is already taken\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={this.handleChange}\r\n                  isValid={this.state.isValid.formPassword}\r\n                  isInvalid={\r\n                    this.state.formPassword !== \"\" &&\r\n                    !this.state.isValid.formPassword\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Must be at least 6 characters long\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formConfirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={this.handleChange}\r\n                  isValid={this.state.isValid.formConfirmPassword}\r\n                  isInvalid={\r\n                    this.state.formConfirmPassword !== \"\" &&\r\n                    !this.state.isValid.formConfirmPassword\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Passwords do not match\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={\r\n                  !this.state.isSubmitEnabled || this.state.isSubmitLoading\r\n                }\r\n                style={{ borderRadius: \"20px\" }}\r\n              >\r\n                <Spinner\r\n                  variant=\"light\"\r\n                  as=\"span\"\r\n                  animation=\"grow\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                  style={{\r\n                    marginRight: \"10px\",\r\n                    display: this.state.isSubmitLoading ? \"default\" : \"none\"\r\n                  }}\r\n                />\r\n                {this.state.isSubmitLoading ? \"Creating...\" : \"Create Account\"}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        {this.state.isSignedUp ? null : (\r\n          <Modal.Footer>\r\n            <Button disabled={true} variant=\"link\" onClick={this.handleClose}>\r\n              Continue as guest\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpModal;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport SignUpModal from \"./SignUpModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showSignUp: false\r\n    };\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ showSignUp: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ showSignUp: false });\r\n  }\r\n\r\n  render() {\r\n    const containerTableStyle = {\r\n      display: \"table\",\r\n      height: \"100vh\"\r\n    };\r\n\r\n    const verticalCenterRowStyle = {\r\n      display: \"table-cell\",\r\n      verticalAlign: \"middle\",\r\n      textAlign: \"center\"\r\n    };\r\n\r\n    const imageStyle = {\r\n      display: \"block\",\r\n      maxWidth: \"200px\",\r\n      margin: \"auto\",\r\n      marginBottom: \"50px\"\r\n    };\r\n\r\n    const signUpBtnStyle = {\r\n      margin: \"auto\",\r\n      maxWidth: \"400px\",\r\n      marginTop: \"50px\",\r\n      borderRadius: \"20px\"\r\n    };\r\n\r\n    const splashUrl = process.env.PUBLIC_URL + \"/assets/splash.png\";\r\n\r\n    return (\r\n      <Container style={containerTableStyle}>\r\n        <Row style={verticalCenterRowStyle}>\r\n          <Image fluid src={splashUrl} style={imageStyle} />\r\n          <h1>Welcome to Pok&#xe9;Type!</h1>\r\n          <p>\r\n            Challenge other trainers across the globe to be the best typist\r\n            there ever was.\r\n          </p>\r\n          <SignUpModal\r\n            show={this.state.showSignUp}\r\n            handleClose={this.handleClose}\r\n          />\r\n          <Button\r\n            block\r\n            variant=\"primary\"\r\n            style={signUpBtnStyle}\r\n            onClick={this.handleShow}\r\n          >\r\n            Sign Up / Continue as Guest\r\n          </Button>\r\n          <Link to=\"/login\">\r\n            <Button variant=\"link\">I already have an account</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nconst Link = require(\"react-router-dom\").Link;\r\n\r\nclass LogIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      showError: false,\r\n      formUsername: \"\",\r\n      formPassword: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.logIn = this.logIn.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    // Update field states and then validate form\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { formUsername, formPassword } = this.state;\r\n    this.logIn(formUsername, formPassword).then(result => {\r\n      if (result.success) {\r\n        // Successfully logged in\r\n        this.setState({ isLoggedIn: true });\r\n      } else {\r\n        // Failed to log in\r\n        this.setState({ showError: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  logIn(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    const promise = fetch(`https://poketype-api.herokuapp.com/v1/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\"\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        return json;\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2 style={{ textAlign: \"center\", padding: \"30px\" }}>\r\n          Log in to Pok&#xe9;Type\r\n        </h2>\r\n        {this.state.isLoggedIn ? (\r\n          <div>\r\n            <p>Successfully logged in!</p>\r\n            <Link to=\"/categories\">\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                size=\"lg\"\r\n                type=\"submit\"\r\n                style={{ borderRadius: \"20px\" }}\r\n              >\r\n                Get Started\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <Form noValidate onSubmit={this.handleSubmit}>\r\n            <Form.Group controlId=\"formUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <p\r\n              style={{\r\n                color: \"red\",\r\n                display: this.state.showError ? \"block\" : \"none\"\r\n              }}\r\n            >\r\n              Either your credentials are incorrect or the server could not find\r\n              the user\r\n            </p>\r\n            <Button\r\n              block\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              style={{ borderRadius: \"20px\" }}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction CategoryItem(props) {\r\n  return (\r\n    <Card bg=\"dark\" text=\"light\">\r\n      <Card.Body>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Card.Text>{props.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport CategoryItem from \"./CategoryItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.categories = [\r\n      {\r\n        title: \"[ EASY ] PokéFacts\",\r\n        description: \"Highly unnecessary facts about Pokémon.\",\r\n        dest: \"facts\"\r\n      },\r\n      {\r\n        title: \"[ MEDIUM ] PokéBehaviours\",\r\n        description: \"Discover how Pokémon behave.\",\r\n        dest: \"behaviours\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ padding: \"20px\" }}>\r\n        <h4 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>\r\n          Choose a category\r\n        </h4>\r\n        {this.categories.map((category, i) => (\r\n          <div key={i} style={{ marginBottom: \"20px\" }}>\r\n            <Link\r\n              to={`/${category.dest}`}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <CategoryItem\r\n                title={category.title}\r\n                description={category.description}\r\n              />\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass SectionHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      wpm: \"XX\",\r\n      acc: \"XX\"\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ wpm: newProps.wpm, acc: newProps.acc });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/categories\">\r\n          <Button variant=\"link\">Back to Categories</Button>\r\n        </Link>\r\n        <p>\r\n          WPM: {this.state.wpm} | ACC: {this.state.acc}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Prompt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      promptWords: props.promptWords,\r\n      curWordIndex: props.curWordIndex,\r\n      correctIndices: props.correctIndices,\r\n      wrongIndices: props.wrongIndices\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      promptWords: newProps.promptWords,\r\n      curWordIndex: newProps.curWordIndex,\r\n      correctIndices: newProps.correctIndices,\r\n      wrongIndices: newProps.wrongIndices\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"30px\", textAlign: \"left\" }}>\r\n        {this.state.promptWords.map((word, i) => (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              display: \"inline\",\r\n              fontSize: \"18px\",\r\n              color:\r\n                i === this.state.curWordIndex\r\n                  ? \"#D06AFF\"\r\n                  : this.state.correctIndices.includes(i)\r\n                  ? \"#69B23F\"\r\n                  : this.state.wrongIndices.includes(i)\r\n                  ? \"#D60000\"\r\n                  : \"#000\"\r\n            }}\r\n          >\r\n            {word + \" \"}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prompt;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction PromptLeaderboard(props) {\r\n  const leaderboard = props.leaderboard;\r\n\r\n  // Convert returned date strings into Date objects\r\n  leaderboard.map(entry => {\r\n    entry[\"date\"] = new Date(entry[\"date\"]);\r\n  });\r\n\r\n  // Sort leaderboard by WPM\r\n  leaderboard\r\n    .sort((a, b) => {\r\n      return a.wpm - b.wpm || a.acc - b.acc;\r\n    })\r\n    .reverse();\r\n\r\n  return (\r\n    <div>\r\n      <p>Leaderboard (Prompt ID: {props.promptId})</p>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>WPM</th>\r\n            <th>ACC (%)</th>\r\n            <th>Attempted On</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((entry, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{entry[\"username\"]}</td>\r\n              <td>{entry[\"wpm\"]}</td>\r\n              <td>{entry[\"acc\"]}</td>\r\n              <td>{entry[\"date\"].toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptLeaderboard;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <Container>\r\n      <Image\r\n        src={process.env.PUBLIC_URL + \"/assets/loading.gif\"}\r\n        style={{ display: \"block\", margin: \"auto\" }}\r\n      />\r\n      <p>\r\n        Please wait while Pikachu fetches your prompt. Subsequent prompts won't\r\n        take as long.\r\n      </p>\r\n      <Spinner animation=\"grow\" role=\"status\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport Prompt from \"./Prompt\";\r\nimport PromptLeaderboard from \"./PromptLeaderboard\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Loading from \"./Loading\";\r\n\r\nclass PromptTypingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: props.category,\r\n      hasLoaded: false,\r\n      hasStarted: false,\r\n      prompts: [],\r\n      prompt: {},\r\n      promptWords: [],\r\n      curWordIndex: 0,\r\n      curWord: \"\",\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false,\r\n      isLeaderboardVisible: false\r\n    };\r\n  }\r\n\r\n  // Get prompts and then generate a new prompt\r\n  componentDidMount() {\r\n    if (this.state.category === \"\") {\r\n      this.getAllPrompts().then(prompts =>\r\n        this.setState({ prompts: prompts, hasLoaded: true }, () =>\r\n          this.generateNewPrompt()\r\n        )\r\n      );\r\n    } else {\r\n      this.getPromptsByCategory().then(prompts =>\r\n        this.setState({ prompts: prompts, hasLoaded: true }, () =>\r\n          this.generateNewPrompt()\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  // Get all prompts\r\n  getAllPrompts() {\r\n    const promise = fetch(\"https://poketype-api.herokuapp.com/v1/prompts\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  getPromptsByCategory() {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompts?category=${this.state.category}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Submit entry to the leaderboard of the given prompt\r\n  submitPromptLeaderboardEntry(promptId, username, wpm, acc, date) {\r\n    const entry = {\r\n      username: username,\r\n      wpm: wpm,\r\n      acc: acc,\r\n      date: date\r\n    };\r\n\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards/${promptId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Connection: \"keep-alive\"\r\n        },\r\n        body: JSON.stringify(entry)\r\n      }\r\n    ).then(res => console.log(res));\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Get prompt leaderboard by ID\r\n  getPromptLeaderboardById(promptId) {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards?promptId=${promptId}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        const leaderboard = json[\"prompt_leaderboard\"];\r\n        console.log(leaderboard);\r\n        return leaderboard;\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  generateNewPrompt = () => {\r\n    // Generate a new prompt (cannot be the same as current prompt)\r\n    let newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    while (\r\n      this.state.prompt[\"_id\"] === this.state.prompts[newPromptIndex][\"_id\"]\r\n    ) {\r\n      newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    }\r\n    const newPrompt = this.state.prompts[newPromptIndex];\r\n\r\n    // Set state for new prompt and enable input\r\n    this.setState(\r\n      {\r\n        hasStarted: false,\r\n        prompt: newPrompt,\r\n        promptWords: newPrompt[\"prompt\"].split(\" \"),\r\n        curWordIndex: 0,\r\n        wrongIndices: [],\r\n        correctIndices: [],\r\n        wpm: \"XX\",\r\n        acc: \"XX\",\r\n        isInputDisabled: false,\r\n        isLeaderboardVisible: false\r\n      },\r\n      () => {\r\n        this.setState({ curWord: this.state.promptWords[0] });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Reset the typing form for the same prompt\r\n  retryPrompt = () => {\r\n    this.setState({\r\n      hasStarted: false,\r\n      curWord: this.state.promptWords[0],\r\n      curWordIndex: 0,\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false\r\n    });\r\n  };\r\n\r\n  changeHandler = e => {\r\n    // Set start time on first key press\r\n    if (!this.state.hasStarted) {\r\n      const startTime = Date.now();\r\n      this.setState({ hasStarted: true, startTime: startTime });\r\n      console.log(`Timer started: ${startTime}`);\r\n    }\r\n\r\n    const curInput = e.target.value;\r\n\r\n    if (this.isSpaceKeyPressed(curInput)) {\r\n      // [space] key pressed\r\n      const curInputNoSpace = curInput.substr(0, curInput.length - 1);\r\n      this.compareWord(curInputNoSpace);\r\n      e.target.value = \"\"; // Clear input control\r\n      e.target.style.backgroundColor = \"#FFF\";\r\n    } else if (this.isLastWord(curInput)) {\r\n      // Automatically push word without needing a [Space] press if last word\r\n      this.compareWord(curInput);\r\n      e.target.value = \"\"; // Clear input control\r\n    } else {\r\n      // Highlight the input field if the user's input is incorrect\r\n      if (curInput !== this.state.curWord.substr(0, curInput.length)) {\r\n        e.target.style.backgroundColor = \"#EE7878\";\r\n      } else {\r\n        e.target.style.backgroundColor = \"#FFF\";\r\n      }\r\n    }\r\n  };\r\n\r\n  compareWord = inputWord => {\r\n    // Check if input matches current word\r\n    if (this.state.curWord === inputWord) {\r\n      this.state.correctIndices.push(this.state.curWordIndex);\r\n    } else {\r\n      this.state.wrongIndices.push(this.state.curWordIndex);\r\n    }\r\n\r\n    // Get next word if prompt is incomplete\r\n    this.setState({ curWordIndex: this.state.curWordIndex + 1 }, () => {\r\n      if (this.state.curWordIndex < this.state.promptWords.length) {\r\n        this.setState({\r\n          curWord: this.state.promptWords[this.state.curWordIndex]\r\n        });\r\n      } else {\r\n        this.promptCompleted();\r\n      }\r\n    });\r\n  };\r\n\r\n  promptCompleted = () => {\r\n    // Get duration\r\n    const endTime = Date.now();\r\n    console.log(`Timer ended: ${endTime}`);\r\n    const durationMs = endTime - this.state.startTime;\r\n    const durationSec = durationMs / 1000;\r\n\r\n    // Get WPM (only counts correct words)\r\n    const wpm = Math.round(\r\n      (this.state.correctIndices.length / durationSec) * 60\r\n    );\r\n\r\n    // Get accuracy\r\n    const numCorrect = this.state.correctIndices.length;\r\n    const numTotal = this.state.promptWords.length;\r\n    const acc = parseFloat(((numCorrect / numTotal) * 100).toFixed(2));\r\n\r\n    this.setState({ isInputDisabled: true, wpm: wpm, acc: acc }, () => {\r\n      // First, post prompt leaderboard entry\r\n      this.submitPromptLeaderboardEntry(\r\n        this.state.prompt[\"_id\"],\r\n        \"test_user\",\r\n        wpm,\r\n        acc,\r\n        new Date()\r\n      )\r\n        // Then get the prompt leaderboard for the current prompt\r\n        .then(() => this.getPromptLeaderboardById(this.state.prompt[\"_id\"]))\r\n        // Finally, show the leaderboard\r\n        .then(prompt_leaderboard =>\r\n          this.setState({\r\n            prompt_leaderboard: prompt_leaderboard,\r\n            isLeaderboardVisible: true\r\n          })\r\n        );\r\n    });\r\n  };\r\n\r\n  // Returns true if the last character of input is a [space]\r\n  isSpaceKeyPressed = input => {\r\n    return input.substr(input.length - 1) === \" \";\r\n  };\r\n\r\n  // Returns true if the input matches the current word and\r\n  // the current word is the last word of the prompt\r\n  isLastWord = word => {\r\n    return (\r\n      this.state.curWordIndex === this.state.promptWords.length - 1 &&\r\n      word === this.state.curWord\r\n    );\r\n  };\r\n\r\n  // Display Loading component until prompts have been fetched\r\n  render() {\r\n    return this.state.hasLoaded ? (\r\n      <div>\r\n        <SectionHeader wpm={this.state.wpm} acc={this.state.acc} />\r\n        <Container\r\n          style={{\r\n            backgroundColor: \"#ECECEC\",\r\n            borderRadius: \"10px\",\r\n            padding: \"30px\",\r\n            marginBottom: \"30px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <Prompt\r\n            promptWords={this.state.promptWords}\r\n            curWordIndex={this.state.curWordIndex}\r\n            correctIndices={this.state.correctIndices}\r\n            wrongIndices={this.state.wrongIndices}\r\n          />\r\n          <Form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Form.Control\r\n              type=\"text\"\r\n              onChange={this.changeHandler}\r\n              disabled={this.state.isInputDisabled}\r\n            />\r\n          </Form>\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={this.generateNewPrompt}\r\n              style={{ marginRight: \"20px\" }}\r\n            >\r\n              Give me another Pok&#xe9;Prompt!\r\n            </Button>\r\n            <Button variant=\"outline-dark\" onClick={this.retryPrompt}>\r\n              Retry\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n        {this.state.isLeaderboardVisible ? (\r\n          <PromptLeaderboard\r\n            promptId={this.state.prompt[\"_id\"]}\r\n            leaderboard={this.state.prompt_leaderboard}\r\n          />\r\n        ) : (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Complete the Pok&#xe9;Prompt above to view its leaderboards!\r\n          </p>\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <Loading />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromptTypingSection;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from \"./components/Home\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport Categories from \"./components/Categories\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PromptTypingSection from \"./components/PromptTypingSection\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={LogIn} />\r\n          <Route path=\"/categories\" component={Categories} />\r\n          <Route path=\"/facts\">\r\n            <Main category=\"fact\" />\r\n          </Route>\r\n          <Route path=\"/behaviours\">\r\n            <Main category=\"behaviour\" />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        paddingTop: \"30px\",\r\n        paddingBottom: \"30px\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"Verdana\"\r\n      }}\r\n    >\r\n      <h4 style={{ marginBottom: \"50px\" }}>Pok&#xe9;Type</h4>\r\n      <PromptTypingSection category={props.category} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}