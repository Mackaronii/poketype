{"version":3,"sources":["components/SignUpModal.jsx","components/Home.jsx","components/SignUp.jsx","components/LogIn.jsx","components/CategoryItem.jsx","components/Categories.jsx","components/SectionHeader.jsx","components/Prompt.jsx","components/PromptLeaderboard.jsx","components/Loading.jsx","components/PromptTypingSection.jsx","App.js","index.js"],"names":["SignUpModal","props","state","show","formUsername","formPassword","formConfirmPassword","isUsernameTaken","isValid","isSubmitEnabled","isSignedUp","handleClose","handleExited","bind","handleChange","handleSubmit","validateForm","newProps","this","setState","e","target","id","value","fetch","method","then","res","json","err","console","error","length","Object","keys","every","key","preventDefault","createUser","isSuccess","showToast","toastHeader","toastBody","username","password","user","headers","body","JSON","stringify","status","Modal","centered","onHide","onExited","Header","closeButton","Title","Body","to","Button","variant","Form","noValidate","onSubmit","Group","controlId","Label","Control","required","type","autoComplete","onChange","isInvalid","Feedback","block","disabled","style","borderRadius","Footer","onClick","Component","Home","showSignUp","handleShow","Container","display","height","Row","verticalAlign","textAlign","Image","fluid","src","process","maxWidth","margin","marginBottom","marginTop","SignUp","padding","LogIn","paddingTop","CategoryItem","Card","bg","text","title","Text","description","Categories","categories","dest","map","category","i","textDecoration","color","SectionHeader","wpm","acc","Prompt","promptWords","curWordIndex","correctIndices","wrongIndices","word","fontSize","includes","PromptLeaderboard","leaderboard","entry","Date","sort","a","b","reverse","promptId","Table","striped","bordered","hover","toLocaleString","Loading","Spinner","animation","role","PromptTypingSection","generateNewPrompt","newPromptIndex","Math","floor","random","prompts","prompt","newPrompt","hasStarted","split","isInputDisabled","isLeaderboardVisible","curWord","retryPrompt","changeHandler","startTime","now","log","curInput","isSpaceKeyPressed","curInputNoSpace","substr","compareWord","backgroundColor","isLastWord","inputWord","push","promptCompleted","endTime","durationSec","round","numCorrect","numTotal","parseFloat","toFixed","submitPromptLeaderboardEntry","getPromptLeaderboardById","prompt_leaderboard","input","hasLoaded","getAllPrompts","getPromptsByCategory","date","Connection","marginRight","Main","paddingBottom","fontFamily","App","basename","exact","path","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd9ed44a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Link from \"react-router-dom/Link\";\r\n\r\nclass SignUpModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      show: props.show,\r\n      formUsername: \"\",\r\n      formPassword: \"\",\r\n      formConfirmPassword: \"\",\r\n      isUsernameTaken: false,\r\n      isValid: {\r\n        formUsername: false,\r\n        formPassword: false,\r\n        formConfirmPassword: false\r\n      },\r\n      isSubmitEnabled: false,\r\n      isSignedUp: false\r\n    };\r\n\r\n    this.handleClose = props.handleClose;\r\n    this.handleExited = this.handleExited.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ show: newProps.show });\r\n  }\r\n\r\n  handleChange(e) {\r\n    // Update field states and then validate form\r\n    this.setState({ [e.target.id]: e.target.value }, () => this.validateForm());\r\n  }\r\n\r\n  validateForm() {\r\n    // Check if username is already taken\r\n    fetch(\r\n      `https://poketype-api.herokuapp.com/v1/users?username=${this.state.formUsername}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        this.setState({ isUsernameTaken: json !== null });\r\n      })\r\n      .then(() =>\r\n        // Next, determine which fields are valid\r\n        this.setState(\r\n          {\r\n            isValid: {\r\n              formUsername:\r\n                !this.state.isUsernameTaken &&\r\n                this.state.formUsername.length > 0,\r\n              formPassword: this.state.formPassword.length >= 6,\r\n              formConfirmPassword:\r\n                this.state.formConfirmPassword.length >= 6 &&\r\n                this.state.formPassword === this.state.formConfirmPassword\r\n            }\r\n          },\r\n          () =>\r\n            // Then enable the submit button is all fields are valid\r\n            this.setState({\r\n              isSubmitEnabled: Object.keys(this.state.isValid).every(\r\n                key => this.state.isValid[key]\r\n              )\r\n                ? true\r\n                : false\r\n            })\r\n        )\r\n      );\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { formUsername, formPassword } = this.state;\r\n\r\n    // Try to create new user. Close modal if successful.\r\n    this.createUser(formUsername, formPassword).then(isSuccess => {\r\n      if (isSuccess) {\r\n        this.setState({ isSignedUp: true });\r\n      } else {\r\n        this.setState({\r\n          showToast: true,\r\n          toastHeader: \"Account Not Created\",\r\n          toastBody:\r\n            \"Either your username is already taken or there was a server error.\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Clean up state for when modal is re-opened\r\n  handleExited() {\r\n    this.setState({\r\n      isSubmitEnabled: false,\r\n      formUsername: \"\",\r\n      formPassword: \"\",\r\n      formConfirmPassword: \"\",\r\n      isUsernameTaken: false,\r\n      isValid: {\r\n        formUsername: false,\r\n        formPassword: false,\r\n        formConfirmPassword: false\r\n      }\r\n    });\r\n  }\r\n\r\n  // Create a new user. Return true if successful and false otherwise.\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    const promise = fetch(`https://poketype-api.herokuapp.com/v1/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    }).then(\r\n      res => {\r\n        if (res.status === 201) {\r\n          // User successfully created\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      err => console.error(err)\r\n    );\r\n\r\n    return promise;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        centered\r\n        show={this.state.show}\r\n        onHide={this.handleClose}\r\n        onExited={this.handleExited}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Your Account</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {this.state.isSignedUp ? (\r\n            <div>\r\n              <p>Your account has been created!</p>\r\n              <Link to=\"/login\">\r\n                <Button variant=\"primary\">Log In</Button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <Form noValidate onSubmit={this.handleSubmit}>\r\n              <Form.Group controlId=\"formUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  onChange={this.handleChange}\r\n                  isValid={this.state.isValid.formUsername}\r\n                  isInvalid={this.state.isUsernameTaken}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Username is already taken\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={this.handleChange}\r\n                  isValid={this.state.isValid.formPassword}\r\n                  isInvalid={\r\n                    this.state.formPassword !== \"\" &&\r\n                    !this.state.isValid.formPassword\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Must be at least 6 characters long\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formConfirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"password\"\r\n                  onChange={this.handleChange}\r\n                  isValid={this.state.isValid.formConfirmPassword}\r\n                  isInvalid={\r\n                    this.state.formConfirmPassword !== \"\" &&\r\n                    !this.state.isValid.formConfirmPassword\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Passwords do not match\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Button\r\n                block\r\n                type=\"submit\"\r\n                variant=\"primary\"\r\n                disabled={!this.state.isSubmitEnabled}\r\n                style={{ borderRadius: \"20px\" }}\r\n              >\r\n                Create Account\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        {this.state.isSignedUp ? null : (\r\n          <Modal.Footer>\r\n            <Button disabled=\"true\" variant=\"link\" onClick={this.handleClose}>\r\n              Continue as guest\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpModal;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport SignUpModal from \"./SignUpModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showSignUp: false\r\n    };\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ showSignUp: true });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ showSignUp: false });\r\n  }\r\n\r\n  render() {\r\n    const containerTableStyle = {\r\n      display: \"table\",\r\n      height: \"100vh\"\r\n    };\r\n\r\n    const verticalCenterRowStyle = {\r\n      display: \"table-cell\",\r\n      verticalAlign: \"middle\",\r\n      textAlign: \"center\"\r\n    };\r\n\r\n    const imageStyle = {\r\n      display: \"block\",\r\n      maxWidth: \"200px\",\r\n      margin: \"auto\",\r\n      marginBottom: \"50px\"\r\n    };\r\n\r\n    const signUpBtnStyle = {\r\n      margin: \"auto\",\r\n      maxWidth: \"400px\",\r\n      marginTop: \"50px\",\r\n      borderRadius: \"20px\"\r\n    };\r\n\r\n    const splashUrl = process.env.PUBLIC_URL + \"/assets/splash.png\";\r\n\r\n    return (\r\n      <Container style={containerTableStyle}>\r\n        <Row style={verticalCenterRowStyle}>\r\n          <Image fluid src={splashUrl} style={imageStyle} />\r\n          <h1>Welcome to Pok&#xe9;Type!</h1>\r\n          <p>\r\n            Challenge other trainers across the globe to be the best typist\r\n            there ever was.\r\n          </p>\r\n          <SignUpModal\r\n            show={this.state.showSignUp}\r\n            handleClose={this.handleClose}\r\n          />\r\n          <Button\r\n            block\r\n            variant=\"primary\"\r\n            style={signUpBtnStyle}\r\n            onClick={this.handleShow}\r\n          >\r\n            Sign Up / Continue as Guest\r\n          </Button>\r\n          <Link to=\"/login\">\r\n            <Button variant=\"link\">I already have an account</Button>\r\n          </Link>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nfunction SignUp(props) {\r\n  return (\r\n    <Container style={{ textAlign: \"center\", padding: \"30px\" }}>\r\n      <h2>Create your account</h2>\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Link from \"react-router-dom/Link\";\r\n\r\nfunction LogIn(props) {\r\n  return (\r\n    <Container style={{ textAlign: \"center\", paddingTop: \"30px\" }}>\r\n      <h2>Log in to Pok&#xe9;Type</h2>\r\n      <Link to=\"/categories\">\r\n        <Button>Still under construction! Continue to Categories...</Button>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction CategoryItem(props) {\r\n  return (\r\n    <Card bg=\"dark\" text=\"light\">\r\n      <Card.Body>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Card.Text>{props.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport CategoryItem from \"./CategoryItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.categories = [\r\n      {\r\n        title: \"[ EASY ] PokéFacts\",\r\n        description: \"Highly unnecessary facts about Pokémon.\",\r\n        dest: \"facts\"\r\n      },\r\n      {\r\n        title: \"[ MEDIUM ] PokéBehaviours\",\r\n        description: \"Discover how Pokémon behave.\",\r\n        dest: \"behaviours\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ padding: \"20px\" }}>\r\n        <h4 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>\r\n          Choose a category\r\n        </h4>\r\n        {this.categories.map((category, i) => (\r\n          <div key={i} style={{ marginBottom: \"20px\" }}>\r\n            <Link\r\n              to={`/${category.dest}`}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <CategoryItem\r\n                title={category.title}\r\n                description={category.description}\r\n              />\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass SectionHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      wpm: \"XX\",\r\n      acc: \"XX\"\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ wpm: newProps.wpm, acc: newProps.acc });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/categories\">\r\n          <Button variant=\"link\">Back to Categories</Button>\r\n        </Link>\r\n        <p>\r\n          WPM: {this.state.wpm} | ACC: {this.state.acc}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Prompt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      promptWords: props.promptWords,\r\n      curWordIndex: props.curWordIndex,\r\n      correctIndices: props.correctIndices,\r\n      wrongIndices: props.wrongIndices\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      promptWords: newProps.promptWords,\r\n      curWordIndex: newProps.curWordIndex,\r\n      correctIndices: newProps.correctIndices,\r\n      wrongIndices: newProps.wrongIndices\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"30px\", textAlign: \"left\" }}>\r\n        {this.state.promptWords.map((word, i) => (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              display: \"inline\",\r\n              fontSize: \"18px\",\r\n              color:\r\n                i === this.state.curWordIndex\r\n                  ? \"#D06AFF\"\r\n                  : this.state.correctIndices.includes(i)\r\n                  ? \"#69B23F\"\r\n                  : this.state.wrongIndices.includes(i)\r\n                  ? \"#D60000\"\r\n                  : \"#000\"\r\n            }}\r\n          >\r\n            {word + \" \"}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prompt;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction PromptLeaderboard(props) {\r\n  const leaderboard = props.leaderboard;\r\n\r\n  // Convert returned date strings into Date objects\r\n  leaderboard.map(entry => {\r\n    entry[\"date\"] = new Date(entry[\"date\"]);\r\n  });\r\n\r\n  // Sort leaderboard by WPM\r\n  leaderboard\r\n    .sort((a, b) => {\r\n      return a.wpm - b.wpm || a.acc - b.acc;\r\n    })\r\n    .reverse();\r\n\r\n  return (\r\n    <div>\r\n      <p>Leaderboard (Prompt ID: {props.promptId})</p>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>WPM</th>\r\n            <th>ACC (%)</th>\r\n            <th>Attempted On</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((entry, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{entry[\"username\"]}</td>\r\n              <td>{entry[\"wpm\"]}</td>\r\n              <td>{entry[\"acc\"]}</td>\r\n              <td>{entry[\"date\"].toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptLeaderboard;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <Container>\r\n      <Image\r\n        src={process.env.PUBLIC_URL + \"/assets/loading.gif\"}\r\n        style={{ display: \"block\", margin: \"auto\" }}\r\n      />\r\n      <p>\r\n        Please wait while Pikachu fetches your prompt. Subsequent prompts won't\r\n        take as long.\r\n      </p>\r\n      <Spinner animation=\"grow\" role=\"status\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport Prompt from \"./Prompt\";\r\nimport PromptLeaderboard from \"./PromptLeaderboard\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Loading from \"./Loading\";\r\n\r\nclass PromptTypingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: props.category,\r\n      hasLoaded: false,\r\n      hasStarted: false,\r\n      prompts: [],\r\n      prompt: {},\r\n      promptWords: [],\r\n      curWordIndex: 0,\r\n      curWord: \"\",\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false,\r\n      isLeaderboardVisible: false\r\n    };\r\n  }\r\n\r\n  // Get prompts and then generate a new prompt\r\n  componentDidMount() {\r\n    if (this.state.category === \"\") {\r\n      this.getAllPrompts().then(prompts =>\r\n        this.setState({ prompts: prompts, hasLoaded: true }, () =>\r\n          this.generateNewPrompt()\r\n        )\r\n      );\r\n    } else {\r\n      this.getPromptsByCategory().then(prompts =>\r\n        this.setState({ prompts: prompts, hasLoaded: true }, () =>\r\n          this.generateNewPrompt()\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  // Get all prompts\r\n  getAllPrompts() {\r\n    const promise = fetch(\"https://poketype-api.herokuapp.com/v1/prompts\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  getPromptsByCategory() {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompts?category=${this.state.category}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Submit entry to the leaderboard of the given prompt\r\n  submitPromptLeaderboardEntry(promptId, username, wpm, acc, date) {\r\n    const entry = {\r\n      username: username,\r\n      wpm: wpm,\r\n      acc: acc,\r\n      date: date\r\n    };\r\n\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards/${promptId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Connection: \"keep-alive\"\r\n        },\r\n        body: JSON.stringify(entry)\r\n      }\r\n    ).then(res => console.log(res));\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Get prompt leaderboard by ID\r\n  getPromptLeaderboardById(promptId) {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards?promptId=${promptId}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        const leaderboard = json[\"prompt_leaderboard\"];\r\n        console.log(leaderboard);\r\n        return leaderboard;\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  generateNewPrompt = () => {\r\n    // Generate a new prompt (cannot be the same as current prompt)\r\n    let newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    while (\r\n      this.state.prompt[\"_id\"] === this.state.prompts[newPromptIndex][\"_id\"]\r\n    ) {\r\n      newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    }\r\n    const newPrompt = this.state.prompts[newPromptIndex];\r\n\r\n    // Set state for new prompt and enable input\r\n    this.setState(\r\n      {\r\n        hasStarted: false,\r\n        prompt: newPrompt,\r\n        promptWords: newPrompt[\"prompt\"].split(\" \"),\r\n        curWordIndex: 0,\r\n        wrongIndices: [],\r\n        correctIndices: [],\r\n        wpm: \"XX\",\r\n        acc: \"XX\",\r\n        isInputDisabled: false,\r\n        isLeaderboardVisible: false\r\n      },\r\n      () => {\r\n        this.setState({ curWord: this.state.promptWords[0] });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Reset the typing form for the same prompt\r\n  retryPrompt = () => {\r\n    this.setState({\r\n      hasStarted: false,\r\n      curWord: this.state.promptWords[0],\r\n      curWordIndex: 0,\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false\r\n    });\r\n  };\r\n\r\n  changeHandler = e => {\r\n    // Set start time on first key press\r\n    if (!this.state.hasStarted) {\r\n      const startTime = Date.now();\r\n      this.setState({ hasStarted: true, startTime: startTime });\r\n      console.log(`Timer started: ${startTime}`);\r\n    }\r\n\r\n    const curInput = e.target.value;\r\n\r\n    if (this.isSpaceKeyPressed(curInput)) {\r\n      // [space] key pressed\r\n      const curInputNoSpace = curInput.substr(0, curInput.length - 1);\r\n      this.compareWord(curInputNoSpace);\r\n      e.target.value = \"\"; // Clear input control\r\n      e.target.style.backgroundColor = \"#FFF\";\r\n    } else if (this.isLastWord(curInput)) {\r\n      // Automatically push word without needing a [Space] press if last word\r\n      this.compareWord(curInput);\r\n      e.target.value = \"\"; // Clear input control\r\n    } else {\r\n      // Highlight the input field if the user's input is incorrect\r\n      if (curInput !== this.state.curWord.substr(0, curInput.length)) {\r\n        e.target.style.backgroundColor = \"#EE7878\";\r\n      } else {\r\n        e.target.style.backgroundColor = \"#FFF\";\r\n      }\r\n    }\r\n  };\r\n\r\n  compareWord = inputWord => {\r\n    // Check if input matches current word\r\n    if (this.state.curWord === inputWord) {\r\n      this.state.correctIndices.push(this.state.curWordIndex);\r\n    } else {\r\n      this.state.wrongIndices.push(this.state.curWordIndex);\r\n    }\r\n\r\n    // Get next word if prompt is incomplete\r\n    this.setState({ curWordIndex: this.state.curWordIndex + 1 }, () => {\r\n      if (this.state.curWordIndex < this.state.promptWords.length) {\r\n        this.setState({\r\n          curWord: this.state.promptWords[this.state.curWordIndex]\r\n        });\r\n      } else {\r\n        this.promptCompleted();\r\n      }\r\n    });\r\n  };\r\n\r\n  promptCompleted = () => {\r\n    // Get duration\r\n    const endTime = Date.now();\r\n    console.log(`Timer ended: ${endTime}`);\r\n    const durationMs = endTime - this.state.startTime;\r\n    const durationSec = durationMs / 1000;\r\n\r\n    // Get WPM (only counts correct words)\r\n    const wpm = Math.round(\r\n      (this.state.correctIndices.length / durationSec) * 60\r\n    );\r\n\r\n    // Get accuracy\r\n    const numCorrect = this.state.correctIndices.length;\r\n    const numTotal = this.state.promptWords.length;\r\n    const acc = parseFloat(((numCorrect / numTotal) * 100).toFixed(2));\r\n\r\n    this.setState({ isInputDisabled: true, wpm: wpm, acc: acc }, () => {\r\n      // First, post prompt leaderboard entry\r\n      this.submitPromptLeaderboardEntry(\r\n        this.state.prompt[\"_id\"],\r\n        \"test_user\",\r\n        wpm,\r\n        acc,\r\n        new Date()\r\n      )\r\n        // Then get the prompt leaderboard for the current prompt\r\n        .then(() => this.getPromptLeaderboardById(this.state.prompt[\"_id\"]))\r\n        // Finally, show the leaderboard\r\n        .then(prompt_leaderboard =>\r\n          this.setState({\r\n            prompt_leaderboard: prompt_leaderboard,\r\n            isLeaderboardVisible: true\r\n          })\r\n        );\r\n    });\r\n  };\r\n\r\n  // Returns true if the last character of input is a [space]\r\n  isSpaceKeyPressed = input => {\r\n    return input.substr(input.length - 1) === \" \";\r\n  };\r\n\r\n  // Returns true if the input matches the current word and\r\n  // the current word is the last word of the prompt\r\n  isLastWord = word => {\r\n    return (\r\n      this.state.curWordIndex === this.state.promptWords.length - 1 &&\r\n      word === this.state.curWord\r\n    );\r\n  };\r\n\r\n  // Display Loading component until prompts have been fetched\r\n  render() {\r\n    return this.state.hasLoaded ? (\r\n      <div>\r\n        <SectionHeader wpm={this.state.wpm} acc={this.state.acc} />\r\n        <Container\r\n          style={{\r\n            backgroundColor: \"#ECECEC\",\r\n            borderRadius: \"10px\",\r\n            padding: \"30px\",\r\n            marginBottom: \"30px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <Prompt\r\n            promptWords={this.state.promptWords}\r\n            curWordIndex={this.state.curWordIndex}\r\n            correctIndices={this.state.correctIndices}\r\n            wrongIndices={this.state.wrongIndices}\r\n          />\r\n          <Form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Form.Control\r\n              type=\"text\"\r\n              onChange={this.changeHandler}\r\n              disabled={this.state.isInputDisabled}\r\n            />\r\n          </Form>\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={this.generateNewPrompt}\r\n              style={{ marginRight: \"20px\" }}\r\n            >\r\n              Give me another Pok&#xe9;Prompt!\r\n            </Button>\r\n            <Button variant=\"outline-dark\" onClick={this.retryPrompt}>\r\n              Retry\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n        {this.state.isLeaderboardVisible ? (\r\n          <PromptLeaderboard\r\n            promptId={this.state.prompt[\"_id\"]}\r\n            leaderboard={this.state.prompt_leaderboard}\r\n          />\r\n        ) : (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Complete the Pok&#xe9;Prompt above to view its leaderboards!\r\n          </p>\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <Loading />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromptTypingSection;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport Categories from \"./components/Categories\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PromptTypingSection from \"./components/PromptTypingSection\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/login\" component={LogIn} />\r\n            <Route path=\"/categories\" component={Categories} />\r\n            <Route path=\"/facts\">\r\n              <Main category=\"fact\" />\r\n            </Route>\r\n            <Route path=\"/behaviours\">\r\n              <Main category=\"behaviour\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        paddingTop: \"30px\",\r\n        paddingBottom: \"30px\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"Verdana\"\r\n      }}\r\n    >\r\n      <h4 style={{ marginBottom: \"50px\" }}>Pok&#xe9;Type</h4>\r\n      <PromptTypingSection category={props.category} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}