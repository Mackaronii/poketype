{"version":3,"sources":["components/Splash.jsx","components/CategoryItem.jsx","components/Categories.jsx","components/SectionHeader.jsx","components/Prompt.jsx","components/PromptLeaderboard.jsx","components/PromptTypingSection.jsx","App.js","index.js"],"names":["Splash","Container","style","display","height","Row","verticalAlign","textAlign","Image","fluid","src","process","maxWidth","margin","marginBottom","to","Button","variant","marginTop","CategoryItem","props","Card","className","Img","image","ImgOverlay","Title","title","Text","description","Categories","state","width","categories","dest","wideImage","narrowImage","updateWindowWidth","bind","this","window","addEventListener","setState","innerWidth","padding","map","category","i","key","Component","SectionHeader","wpm","acc","newProps","Prompt","promptWords","curWordIndex","correctIndices","wrongIndices","word","fontSize","color","includes","PromptLeaderboard","leaderboard","entry","Date","sort","a","b","reverse","promptId","Table","striped","bordered","hover","toLocaleString","PromptTypingSection","generateNewPrompt","newPromptIndex","Math","floor","random","prompts","length","prompt","newPrompt","hasStarted","split","isInputDisabled","isLeaderboardVisible","curWord","retryPrompt","changeHandler","e","startTime","now","console","log","curInput","target","value","isSpaceKeyPressed","curInputNoSpace","substr","compareWord","backgroundColor","isLastWord","inputWord","push","promptCompleted","endTime","durationSec","round","numCorrect","numTotal","parseFloat","toFixed","submitPromptLeaderboardEntry","then","getPromptLeaderboardById","prompt_leaderboard","input","getAllPrompts","getPromptsByCategory","fetch","method","res","json","err","error","username","date","headers","Connection","body","JSON","stringify","borderRadius","Form","onSubmit","preventDefault","Control","type","onChange","disabled","onClick","marginRight","Main","paddingTop","paddingBottom","fontFamily","App","basename","exact","path","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4e68c4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Splash() {\r\n  const containerTableStyle = {\r\n    display: \"table\",\r\n    height: \"100vh\"\r\n  };\r\n\r\n  const verticalCenterRowStyle = {\r\n    display: \"table-cell\",\r\n    verticalAlign: \"middle\",\r\n    textAlign: \"center\"\r\n  };\r\n\r\n  const imageStyle = {\r\n    display: \"block\",\r\n    maxWidth: \"300px\",\r\n    margin: \"auto\",\r\n    marginBottom: \"50px\"\r\n  };\r\n\r\n  const splashUrl = process.env.PUBLIC_URL + \"/assets/splash.png\";\r\n\r\n  return (\r\n    <Container style={containerTableStyle}>\r\n      <Row style={verticalCenterRowStyle}>\r\n        <Image fluid src={splashUrl} style={imageStyle} />\r\n        <h1>Welcome to Pok&#xe9;Type!</h1>\r\n        <p>\r\n          Challenge other trainers across the globe to be the best typist there\r\n          ever was.\r\n        </p>\r\n        <Link to=\"/categories\">\r\n          <Button variant=\"outline-primary\" style={{ marginTop: \"30px\" }}>\r\n            Get Started\r\n          </Button>\r\n        </Link>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Splash;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction CategoryItem(props) {\r\n  return (\r\n    <Card className=\"text-white\">\r\n      <Card.Img src={props.image} />\r\n      <Card.ImgOverlay>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Card.Text>{props.description}</Card.Text>\r\n      </Card.ImgOverlay>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport CategoryItem from \"./CategoryItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      width: 0,\r\n      categories: [\r\n        {\r\n          title: \"[ EASY ] PokéFacts\",\r\n          description: \"Highly unnecessary facts about Pokémon.\",\r\n          dest: \"facts\",\r\n          wideImage:\r\n            process.env.PUBLIC_URL +\r\n            \"/assets/category_backgrounds/1100px/facts.png\",\r\n          narrowImage:\r\n            process.env.PUBLIC_URL +\r\n            \"/assets/category_backgrounds/767px/facts.png\"\r\n        },\r\n        {\r\n          title: \"[ MEDIUM ] PokéBehaviours\",\r\n          description: \"Discover how Pokémon behave.\",\r\n          dest: \"behaviours\",\r\n          wideImage:\r\n            process.env.PUBLIC_URL +\r\n            \"/assets/category_backgrounds/1100px/behaviours.png\",\r\n          narrowImage:\r\n            process.env.PUBLIC_URL +\r\n            \"/assets/category_backgrounds/767px/behaviours.png\"\r\n        }\r\n      ]\r\n    };\r\n\r\n    this.updateWindowWidth = this.updateWindowWidth.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowWidth();\r\n    window.addEventListener(\"resize\", this.updateWindowWidth);\r\n  }\r\n\r\n  updateWindowWidth() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ padding: \"20px\" }}>\r\n        <h4 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>\r\n          Choose a category\r\n        </h4>\r\n        {this.state.categories.map((category, i) => (\r\n          <div key={i} style={{ marginBottom: \"20px\" }}>\r\n            <Link to={`/${category.dest}`}>\r\n              <CategoryItem\r\n                title={category.title}\r\n                description={category.description}\r\n                image={\r\n                  this.state.width < 768\r\n                    ? category.narrowImage\r\n                    : category.wideImage\r\n                }\r\n              />\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass SectionHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      wpm: \"XX\",\r\n      acc: \"XX\"\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ wpm: newProps.wpm, acc: newProps.acc });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/categories\">\r\n          <Button variant=\"link\">Back to Categories</Button>\r\n        </Link>\r\n        <p>\r\n          WPM: {this.state.wpm} | ACC: {this.state.acc}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Prompt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      promptWords: props.promptWords,\r\n      curWordIndex: props.curWordIndex,\r\n      correctIndices: props.correctIndices,\r\n      wrongIndices: props.wrongIndices\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      promptWords: newProps.promptWords,\r\n      curWordIndex: newProps.curWordIndex,\r\n      correctIndices: newProps.correctIndices,\r\n      wrongIndices: newProps.wrongIndices\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"30px\", textAlign: \"left\" }}>\r\n        {this.state.promptWords.map((word, i) => (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              display: \"inline\",\r\n              fontSize: \"18px\",\r\n              color:\r\n                i === this.state.curWordIndex\r\n                  ? \"#D06AFF\"\r\n                  : this.state.correctIndices.includes(i)\r\n                  ? \"#69B23F\"\r\n                  : this.state.wrongIndices.includes(i)\r\n                  ? \"#D60000\"\r\n                  : \"#000\"\r\n            }}\r\n          >\r\n            {word + \" \"}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prompt;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction PromptLeaderboard(props) {\r\n  const leaderboard = props.leaderboard;\r\n\r\n  // Convert returned date strings into Date objects\r\n  leaderboard.map(entry => {\r\n    entry[\"date\"] = new Date(entry[\"date\"]);\r\n  });\r\n\r\n  // Sort leaderboard by WPM\r\n  leaderboard\r\n    .sort((a, b) => {\r\n      if (a.wpm < b.wpm) {\r\n        return -1;\r\n      }\r\n      if (a.wpm > b.wpm) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    })\r\n    .reverse();\r\n\r\n  return (\r\n    <div>\r\n      <p>Leaderboard (Prompt ID: {props.promptId})</p>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>WPM</th>\r\n            <th>ACC (%)</th>\r\n            <th>Attempted On</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((entry, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{entry[\"username\"]}</td>\r\n              <td>{entry[\"wpm\"]}</td>\r\n              <td>{entry[\"acc\"]}</td>\r\n              <td>{entry[\"date\"].toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptLeaderboard;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport Prompt from \"./Prompt\";\r\nimport PromptLeaderboard from \"./PromptLeaderboard\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass PromptTypingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: props.category,\r\n      hasStarted: false,\r\n      prompts: [],\r\n      prompt: {},\r\n      promptWords: [],\r\n      curWordIndex: 0,\r\n      curWord: \"\",\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false,\r\n      isLeaderboardVisible: false\r\n    };\r\n  }\r\n\r\n  // Get prompts and then generate a new prompt\r\n  componentDidMount() {\r\n    if (this.state.category === \"\") {\r\n      this.getAllPrompts().then(prompts =>\r\n        this.setState({ prompts: prompts }, () => this.generateNewPrompt())\r\n      );\r\n    } else {\r\n      this.getPromptsByCategory().then(prompts =>\r\n        this.setState({ prompts: prompts }, () => this.generateNewPrompt())\r\n      );\r\n    }\r\n  }\r\n\r\n  // Get all prompts\r\n  getAllPrompts() {\r\n    const promise = fetch(\"https://poketype-api.herokuapp.com/v1/prompts\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  getPromptsByCategory() {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompts?category=${this.state.category}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Submit entry to the leaderboard of the given prompt\r\n  submitPromptLeaderboardEntry(promptId, username, wpm, acc, date) {\r\n    const entry = {\r\n      username: username,\r\n      wpm: wpm,\r\n      acc: acc,\r\n      date: date\r\n    };\r\n\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards/${promptId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Connection: \"keep-alive\"\r\n        },\r\n        body: JSON.stringify(entry)\r\n      }\r\n    ).then(res => console.log(res));\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Get prompt leaderboard by ID\r\n  getPromptLeaderboardById(promptId) {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards?promptId=${promptId}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        const leaderboard = json[\"prompt_leaderboard\"];\r\n        console.log(leaderboard);\r\n        return leaderboard;\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  generateNewPrompt = () => {\r\n    // Generate a new prompt (cannot be the same as current prompt)\r\n    let newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    while (\r\n      this.state.prompt[\"_id\"] === this.state.prompts[newPromptIndex][\"_id\"]\r\n    ) {\r\n      newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    }\r\n    const newPrompt = this.state.prompts[newPromptIndex];\r\n\r\n    // Set state for new prompt and enable input\r\n    this.setState(\r\n      {\r\n        hasStarted: false,\r\n        prompt: newPrompt,\r\n        promptWords: newPrompt[\"prompt\"].split(\" \"),\r\n        curWordIndex: 0,\r\n        wrongIndices: [],\r\n        correctIndices: [],\r\n        wpm: \"XX\",\r\n        acc: \"XX\",\r\n        isInputDisabled: false,\r\n        isLeaderboardVisible: false\r\n      },\r\n      () => {\r\n        this.setState({ curWord: this.state.promptWords[0] });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Reset the typing form for the same prompt\r\n  retryPrompt = () => {\r\n    this.setState({\r\n      hasStarted: false,\r\n      curWord: this.state.promptWords[0],\r\n      curWordIndex: 0,\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false\r\n    });\r\n  };\r\n\r\n  changeHandler = e => {\r\n    // Set start time on first key press\r\n    if (!this.state.hasStarted) {\r\n      const startTime = Date.now();\r\n      this.setState({ hasStarted: true, startTime: startTime });\r\n      console.log(`Timer started: ${startTime}`);\r\n    }\r\n\r\n    const curInput = e.target.value;\r\n\r\n    if (this.isSpaceKeyPressed(curInput)) {\r\n      // [space] key pressed\r\n      const curInputNoSpace = curInput.substr(0, curInput.length - 1);\r\n      this.compareWord(curInputNoSpace);\r\n      e.target.value = \"\"; // Clear input control\r\n      e.target.style.backgroundColor = \"#FFF\";\r\n    } else if (this.isLastWord(curInput)) {\r\n      // Automatically push word without needing a [Space] press if last word\r\n      this.compareWord(curInput);\r\n      e.target.value = \"\"; // Clear input control\r\n    } else {\r\n      // Highlight the input field if the user's input is incorrect\r\n      if (curInput !== this.state.curWord.substr(0, curInput.length)) {\r\n        e.target.style.backgroundColor = \"#EE7878\";\r\n      } else {\r\n        e.target.style.backgroundColor = \"#FFF\";\r\n      }\r\n    }\r\n  };\r\n\r\n  compareWord = inputWord => {\r\n    // Check if input matches current word\r\n    if (this.state.curWord === inputWord) {\r\n      this.state.correctIndices.push(this.state.curWordIndex);\r\n    } else {\r\n      this.state.wrongIndices.push(this.state.curWordIndex);\r\n    }\r\n\r\n    // Get next word if prompt is incomplete\r\n    this.setState({ curWordIndex: this.state.curWordIndex + 1 }, () => {\r\n      if (this.state.curWordIndex < this.state.promptWords.length) {\r\n        this.setState({\r\n          curWord: this.state.promptWords[this.state.curWordIndex]\r\n        });\r\n      } else {\r\n        this.promptCompleted();\r\n      }\r\n    });\r\n  };\r\n\r\n  promptCompleted = () => {\r\n    // Get duration\r\n    const endTime = Date.now();\r\n    console.log(`Timer ended: ${endTime}`);\r\n    const durationMs = endTime - this.state.startTime;\r\n    const durationSec = durationMs / 1000;\r\n\r\n    // Get WPM (only counts correct words)\r\n    const wpm = Math.round(\r\n      (this.state.correctIndices.length / durationSec) * 60\r\n    );\r\n\r\n    // Get accuracy\r\n    const numCorrect = this.state.correctIndices.length;\r\n    const numTotal = this.state.promptWords.length;\r\n    const acc = parseFloat(((numCorrect / numTotal) * 100).toFixed(2));\r\n\r\n    this.setState({ isInputDisabled: true, wpm: wpm, acc: acc }, () => {\r\n      // First, post prompt leaderboard entry\r\n      this.submitPromptLeaderboardEntry(\r\n        this.state.prompt[\"_id\"],\r\n        \"test_user\",\r\n        wpm,\r\n        acc,\r\n        new Date()\r\n      )\r\n        // Then get the prompt leaderboard for the current prompt\r\n        .then(() => this.getPromptLeaderboardById(this.state.prompt[\"_id\"]))\r\n        // Finally, show the leaderboard\r\n        .then(prompt_leaderboard =>\r\n          this.setState({\r\n            prompt_leaderboard: prompt_leaderboard,\r\n            isLeaderboardVisible: true\r\n          })\r\n        );\r\n    });\r\n  };\r\n\r\n  // Returns true if the last character of input is a [space]\r\n  isSpaceKeyPressed = input => {\r\n    return input.substr(input.length - 1) === \" \";\r\n  };\r\n\r\n  // Returns true if the input matches the current word and\r\n  // the current word is the last word of the prompt\r\n  isLastWord = word => {\r\n    return (\r\n      this.state.curWordIndex === this.state.promptWords.length - 1 &&\r\n      word === this.state.curWord\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SectionHeader wpm={this.state.wpm} acc={this.state.acc} />\r\n        <Container\r\n          style={{\r\n            backgroundColor: \"#ECECEC\",\r\n            borderRadius: \"10px\",\r\n            padding: \"30px\",\r\n            marginBottom: \"30px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <Prompt\r\n            promptWords={this.state.promptWords}\r\n            curWordIndex={this.state.curWordIndex}\r\n            correctIndices={this.state.correctIndices}\r\n            wrongIndices={this.state.wrongIndices}\r\n          />\r\n          <Form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Form.Control\r\n              type=\"text\"\r\n              onChange={this.changeHandler}\r\n              disabled={this.state.isInputDisabled}\r\n            />\r\n          </Form>\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={this.generateNewPrompt}\r\n              style={{ marginRight: \"20px\" }}\r\n            >\r\n              Give me another Pok&#xe9;Prompt!\r\n            </Button>\r\n            <Button variant=\"outline-dark\" onClick={this.retryPrompt}>\r\n              Retry\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n        {this.state.isLeaderboardVisible ? (\r\n          <PromptLeaderboard\r\n            promptId={this.state.prompt[\"_id\"]}\r\n            leaderboard={this.state.prompt_leaderboard}\r\n          />\r\n        ) : (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Complete the Pok&#xe9;Prompt above to view its leaderboards!\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromptTypingSection;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Splash from \"./components/Splash\";\r\nimport Categories from \"./components/Categories\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PromptTypingSection from \"./components/PromptTypingSection\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Splash} />\r\n            <Route path=\"/categories\" component={Categories} />\r\n            <Route path=\"/facts\">\r\n              <Main category=\"fact\" />\r\n            </Route>\r\n            <Route path=\"/behaviours\">\r\n              <Main category=\"behaviour\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        paddingTop: \"30px\",\r\n        paddingBottom: \"30px\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"Verdana\"\r\n      }}\r\n    >\r\n      <h4 style={{ marginBottom: \"50px\" }}>Pok&#xe9;Type</h4>\r\n      <PromptTypingSection category={props.category} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}