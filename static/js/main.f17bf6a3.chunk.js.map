{"version":3,"sources":["components/Splash.jsx","components/CategoryItem.jsx","components/Categories.jsx","components/SectionHeader.jsx","components/Prompt.jsx","components/PromptLeaderboard.jsx","components/PromptTypingSection.jsx","App.js","index.js"],"names":["Splash","Container","style","display","height","Row","verticalAlign","textAlign","Image","fluid","src","process","maxWidth","margin","marginBottom","to","Button","variant","marginTop","CategoryItem","props","Card","bg","text","Body","Title","title","Text","description","Categories","categories","dest","padding","this","map","category","i","key","textDecoration","color","Component","SectionHeader","state","wpm","acc","newProps","setState","Prompt","promptWords","curWordIndex","correctIndices","wrongIndices","word","fontSize","includes","PromptLeaderboard","leaderboard","entry","Date","sort","a","b","reverse","promptId","Table","striped","bordered","hover","toLocaleString","PromptTypingSection","generateNewPrompt","newPromptIndex","Math","floor","random","prompts","length","prompt","newPrompt","hasStarted","split","isInputDisabled","isLeaderboardVisible","curWord","retryPrompt","changeHandler","e","startTime","now","console","log","curInput","target","value","isSpaceKeyPressed","curInputNoSpace","substr","compareWord","backgroundColor","isLastWord","inputWord","push","promptCompleted","endTime","durationSec","round","numCorrect","numTotal","parseFloat","toFixed","submitPromptLeaderboardEntry","then","getPromptLeaderboardById","prompt_leaderboard","input","getAllPrompts","getPromptsByCategory","fetch","method","res","json","err","error","username","date","headers","Connection","body","JSON","stringify","borderRadius","Form","onSubmit","preventDefault","Control","type","onChange","disabled","onClick","marginRight","Main","paddingTop","paddingBottom","fontFamily","App","basename","exact","path","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f17bf6a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Splash() {\r\n  const containerTableStyle = {\r\n    display: \"table\",\r\n    height: \"100vh\"\r\n  };\r\n\r\n  const verticalCenterRowStyle = {\r\n    display: \"table-cell\",\r\n    verticalAlign: \"middle\",\r\n    textAlign: \"center\"\r\n  };\r\n\r\n  const imageStyle = {\r\n    display: \"block\",\r\n    maxWidth: \"300px\",\r\n    margin: \"auto\",\r\n    marginBottom: \"50px\"\r\n  };\r\n\r\n  const splashUrl = process.env.PUBLIC_URL + \"/assets/splash.png\";\r\n\r\n  return (\r\n    <Container style={containerTableStyle}>\r\n      <Row style={verticalCenterRowStyle}>\r\n        <Image fluid src={splashUrl} style={imageStyle} />\r\n        <h1>Welcome to Pok&#xe9;Type!</h1>\r\n        <p>\r\n          Challenge other trainers across the globe to be the best typist there\r\n          ever was.\r\n        </p>\r\n        <Link to=\"/categories\">\r\n          <Button variant=\"outline-primary\" style={{ marginTop: \"30px\" }}>\r\n            Get Started\r\n          </Button>\r\n        </Link>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Splash;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction CategoryItem(props) {\r\n  return (\r\n    <Card bg=\"dark\" text=\"light\">\r\n      <Card.Body>\r\n        <Card.Title>{props.title}</Card.Title>\r\n        <Card.Text>{props.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport CategoryItem from \"./CategoryItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Categories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.categories = [\r\n      {\r\n        title: \"[ EASY ] PokéFacts\",\r\n        description: \"Highly unnecessary facts about Pokémon.\",\r\n        dest: \"facts\"\r\n      },\r\n      {\r\n        title: \"[ MEDIUM ] PokéBehaviours\",\r\n        description: \"Discover how Pokémon behave.\",\r\n        dest: \"behaviours\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ padding: \"20px\" }}>\r\n        <h4 style={{ textAlign: \"center\", marginBottom: \"50px\" }}>\r\n          Choose a category\r\n        </h4>\r\n        {this.categories.map((category, i) => (\r\n          <div key={i} style={{ marginBottom: \"20px\" }}>\r\n            <Link\r\n              to={`/${category.dest}`}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <CategoryItem\r\n                title={category.title}\r\n                description={category.description}\r\n              />\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass SectionHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      wpm: \"XX\",\r\n      acc: \"XX\"\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ wpm: newProps.wpm, acc: newProps.acc });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/categories\">\r\n          <Button variant=\"link\">Back to Categories</Button>\r\n        </Link>\r\n        <p>\r\n          WPM: {this.state.wpm} | ACC: {this.state.acc}%\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Prompt extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      promptWords: props.promptWords,\r\n      curWordIndex: props.curWordIndex,\r\n      correctIndices: props.correctIndices,\r\n      wrongIndices: props.wrongIndices\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      promptWords: newProps.promptWords,\r\n      curWordIndex: newProps.curWordIndex,\r\n      correctIndices: newProps.correctIndices,\r\n      wrongIndices: newProps.wrongIndices\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginBottom: \"30px\", textAlign: \"left\" }}>\r\n        {this.state.promptWords.map((word, i) => (\r\n          <p\r\n            key={i}\r\n            style={{\r\n              display: \"inline\",\r\n              fontSize: \"18px\",\r\n              color:\r\n                i === this.state.curWordIndex\r\n                  ? \"#D06AFF\"\r\n                  : this.state.correctIndices.includes(i)\r\n                  ? \"#69B23F\"\r\n                  : this.state.wrongIndices.includes(i)\r\n                  ? \"#D60000\"\r\n                  : \"#000\"\r\n            }}\r\n          >\r\n            {word + \" \"}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prompt;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction PromptLeaderboard(props) {\r\n  const leaderboard = props.leaderboard;\r\n\r\n  // Convert returned date strings into Date objects\r\n  leaderboard.map(entry => {\r\n    entry[\"date\"] = new Date(entry[\"date\"]);\r\n  });\r\n\r\n  // Sort leaderboard by WPM\r\n  leaderboard\r\n    .sort((a, b) => {\r\n      return a.wpm - b.wpm || a.acc - b.acc;\r\n    })\r\n    .reverse();\r\n\r\n  return (\r\n    <div>\r\n      <p>Leaderboard (Prompt ID: {props.promptId})</p>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>WPM</th>\r\n            <th>ACC (%)</th>\r\n            <th>Attempted On</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.map((entry, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{entry[\"username\"]}</td>\r\n              <td>{entry[\"wpm\"]}</td>\r\n              <td>{entry[\"acc\"]}</td>\r\n              <td>{entry[\"date\"].toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptLeaderboard;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SectionHeader from \"./SectionHeader\";\r\nimport Prompt from \"./Prompt\";\r\nimport PromptLeaderboard from \"./PromptLeaderboard\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass PromptTypingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      category: props.category,\r\n      hasStarted: false,\r\n      prompts: [],\r\n      prompt: {},\r\n      promptWords: [],\r\n      curWordIndex: 0,\r\n      curWord: \"\",\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false,\r\n      isLeaderboardVisible: false\r\n    };\r\n  }\r\n\r\n  // Get prompts and then generate a new prompt\r\n  componentDidMount() {\r\n    if (this.state.category === \"\") {\r\n      this.getAllPrompts().then(prompts =>\r\n        this.setState({ prompts: prompts }, () => this.generateNewPrompt())\r\n      );\r\n    } else {\r\n      this.getPromptsByCategory().then(prompts =>\r\n        this.setState({ prompts: prompts }, () => this.generateNewPrompt())\r\n      );\r\n    }\r\n  }\r\n\r\n  // Get all prompts\r\n  getAllPrompts() {\r\n    const promise = fetch(\"https://poketype-api.herokuapp.com/v1/prompts\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  getPromptsByCategory() {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompts?category=${this.state.category}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        return json[\"prompts\"];\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Submit entry to the leaderboard of the given prompt\r\n  submitPromptLeaderboardEntry(promptId, username, wpm, acc, date) {\r\n    const entry = {\r\n      username: username,\r\n      wpm: wpm,\r\n      acc: acc,\r\n      date: date\r\n    };\r\n\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards/${promptId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Connection: \"keep-alive\"\r\n        },\r\n        body: JSON.stringify(entry)\r\n      }\r\n    ).then(res => console.log(res));\r\n\r\n    return promise;\r\n  }\r\n\r\n  // Get prompt leaderboard by ID\r\n  getPromptLeaderboardById(promptId) {\r\n    const promise = fetch(\r\n      `https://poketype-api.herokuapp.com/v1/prompt_leaderboards?promptId=${promptId}`,\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(\r\n        res => res.json(),\r\n        err => console.error(err)\r\n      )\r\n      .then(json => {\r\n        const leaderboard = json[\"prompt_leaderboard\"];\r\n        console.log(leaderboard);\r\n        return leaderboard;\r\n      });\r\n\r\n    return promise;\r\n  }\r\n\r\n  generateNewPrompt = () => {\r\n    // Generate a new prompt (cannot be the same as current prompt)\r\n    let newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    while (\r\n      this.state.prompt[\"_id\"] === this.state.prompts[newPromptIndex][\"_id\"]\r\n    ) {\r\n      newPromptIndex = Math.floor(Math.random() * this.state.prompts.length);\r\n    }\r\n    const newPrompt = this.state.prompts[newPromptIndex];\r\n\r\n    // Set state for new prompt and enable input\r\n    this.setState(\r\n      {\r\n        hasStarted: false,\r\n        prompt: newPrompt,\r\n        promptWords: newPrompt[\"prompt\"].split(\" \"),\r\n        curWordIndex: 0,\r\n        wrongIndices: [],\r\n        correctIndices: [],\r\n        wpm: \"XX\",\r\n        acc: \"XX\",\r\n        isInputDisabled: false,\r\n        isLeaderboardVisible: false\r\n      },\r\n      () => {\r\n        this.setState({ curWord: this.state.promptWords[0] });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Reset the typing form for the same prompt\r\n  retryPrompt = () => {\r\n    this.setState({\r\n      hasStarted: false,\r\n      curWord: this.state.promptWords[0],\r\n      curWordIndex: 0,\r\n      wrongIndices: [],\r\n      correctIndices: [],\r\n      wpm: \"XX\",\r\n      acc: \"XX\",\r\n      isInputDisabled: false\r\n    });\r\n  };\r\n\r\n  changeHandler = e => {\r\n    // Set start time on first key press\r\n    if (!this.state.hasStarted) {\r\n      const startTime = Date.now();\r\n      this.setState({ hasStarted: true, startTime: startTime });\r\n      console.log(`Timer started: ${startTime}`);\r\n    }\r\n\r\n    const curInput = e.target.value;\r\n\r\n    if (this.isSpaceKeyPressed(curInput)) {\r\n      // [space] key pressed\r\n      const curInputNoSpace = curInput.substr(0, curInput.length - 1);\r\n      this.compareWord(curInputNoSpace);\r\n      e.target.value = \"\"; // Clear input control\r\n      e.target.style.backgroundColor = \"#FFF\";\r\n    } else if (this.isLastWord(curInput)) {\r\n      // Automatically push word without needing a [Space] press if last word\r\n      this.compareWord(curInput);\r\n      e.target.value = \"\"; // Clear input control\r\n    } else {\r\n      // Highlight the input field if the user's input is incorrect\r\n      if (curInput !== this.state.curWord.substr(0, curInput.length)) {\r\n        e.target.style.backgroundColor = \"#EE7878\";\r\n      } else {\r\n        e.target.style.backgroundColor = \"#FFF\";\r\n      }\r\n    }\r\n  };\r\n\r\n  compareWord = inputWord => {\r\n    // Check if input matches current word\r\n    if (this.state.curWord === inputWord) {\r\n      this.state.correctIndices.push(this.state.curWordIndex);\r\n    } else {\r\n      this.state.wrongIndices.push(this.state.curWordIndex);\r\n    }\r\n\r\n    // Get next word if prompt is incomplete\r\n    this.setState({ curWordIndex: this.state.curWordIndex + 1 }, () => {\r\n      if (this.state.curWordIndex < this.state.promptWords.length) {\r\n        this.setState({\r\n          curWord: this.state.promptWords[this.state.curWordIndex]\r\n        });\r\n      } else {\r\n        this.promptCompleted();\r\n      }\r\n    });\r\n  };\r\n\r\n  promptCompleted = () => {\r\n    // Get duration\r\n    const endTime = Date.now();\r\n    console.log(`Timer ended: ${endTime}`);\r\n    const durationMs = endTime - this.state.startTime;\r\n    const durationSec = durationMs / 1000;\r\n\r\n    // Get WPM (only counts correct words)\r\n    const wpm = Math.round(\r\n      (this.state.correctIndices.length / durationSec) * 60\r\n    );\r\n\r\n    // Get accuracy\r\n    const numCorrect = this.state.correctIndices.length;\r\n    const numTotal = this.state.promptWords.length;\r\n    const acc = parseFloat(((numCorrect / numTotal) * 100).toFixed(2));\r\n\r\n    this.setState({ isInputDisabled: true, wpm: wpm, acc: acc }, () => {\r\n      // First, post prompt leaderboard entry\r\n      this.submitPromptLeaderboardEntry(\r\n        this.state.prompt[\"_id\"],\r\n        \"test_user\",\r\n        wpm,\r\n        acc,\r\n        new Date()\r\n      )\r\n        // Then get the prompt leaderboard for the current prompt\r\n        .then(() => this.getPromptLeaderboardById(this.state.prompt[\"_id\"]))\r\n        // Finally, show the leaderboard\r\n        .then(prompt_leaderboard =>\r\n          this.setState({\r\n            prompt_leaderboard: prompt_leaderboard,\r\n            isLeaderboardVisible: true\r\n          })\r\n        );\r\n    });\r\n  };\r\n\r\n  // Returns true if the last character of input is a [space]\r\n  isSpaceKeyPressed = input => {\r\n    return input.substr(input.length - 1) === \" \";\r\n  };\r\n\r\n  // Returns true if the input matches the current word and\r\n  // the current word is the last word of the prompt\r\n  isLastWord = word => {\r\n    return (\r\n      this.state.curWordIndex === this.state.promptWords.length - 1 &&\r\n      word === this.state.curWord\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SectionHeader wpm={this.state.wpm} acc={this.state.acc} />\r\n        <Container\r\n          style={{\r\n            backgroundColor: \"#ECECEC\",\r\n            borderRadius: \"10px\",\r\n            padding: \"30px\",\r\n            marginBottom: \"30px\",\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          <Prompt\r\n            promptWords={this.state.promptWords}\r\n            curWordIndex={this.state.curWordIndex}\r\n            correctIndices={this.state.correctIndices}\r\n            wrongIndices={this.state.wrongIndices}\r\n          />\r\n          <Form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Form.Control\r\n              type=\"text\"\r\n              onChange={this.changeHandler}\r\n              disabled={this.state.isInputDisabled}\r\n            />\r\n          </Form>\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={this.generateNewPrompt}\r\n              style={{ marginRight: \"20px\" }}\r\n            >\r\n              Give me another Pok&#xe9;Prompt!\r\n            </Button>\r\n            <Button variant=\"outline-dark\" onClick={this.retryPrompt}>\r\n              Retry\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n        {this.state.isLeaderboardVisible ? (\r\n          <PromptLeaderboard\r\n            promptId={this.state.prompt[\"_id\"]}\r\n            leaderboard={this.state.prompt_leaderboard}\r\n          />\r\n        ) : (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Complete the Pok&#xe9;Prompt above to view its leaderboards!\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromptTypingSection;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Splash from \"./components/Splash\";\r\nimport Categories from \"./components/Categories\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PromptTypingSection from \"./components/PromptTypingSection\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Splash} />\r\n            <Route path=\"/categories\" component={Categories} />\r\n            <Route path=\"/facts\">\r\n              <Main category=\"fact\" />\r\n            </Route>\r\n            <Route path=\"/behaviours\">\r\n              <Main category=\"behaviour\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        paddingTop: \"30px\",\r\n        paddingBottom: \"30px\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"Verdana\"\r\n      }}\r\n    >\r\n      <h4 style={{ marginBottom: \"50px\" }}>Pok&#xe9;Type</h4>\r\n      <PromptTypingSection category={props.category} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}